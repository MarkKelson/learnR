## Credit: http://www.computerworld.com/article/2893271/business-intelligence/5-data-visualizations-in-5-minutes-each-in-5-lines-or-less-of-r.html
library(checkpoint)
checkpoint("2016-08-22")
## Correlation plot
file <- "https://github.com/smach/NICAR15data/raw/master/testscores.csv"
testdata <- read.csv(file, stringsAsFactors = FALSE)
library(ggvis)
ggvis(testdata, ~ pctpoor, ~ score) %>%
layer_points(size := input_slider(10, 310, label = "Point size"), opacity := input_slider(0, 1, label = "Point opacity")) %>%
layer_model_predictions(model = "lm", stroke := "red", fill := "red")
## Plot all Starbucks locations using OpenStreetMap
## Credit: http://www.computerworld.com/article/2893271/business-intelligence/5-data-visualizations-in-5-minutes-each-in-5-lines-or-less-of-r.html
library(checkpoint)
checkpoint("2016-08-22")
file <- "https://opendata.socrata.com/api/views/ddym-zvjk/rows.csv"
starbucks <- read.csv(file)
library(leaflet); library(magrittr)
leaflet() %>% addTiles() %>% setView(-84.3847, 33.7613, zoom = 16) %>%
addMarkers(data = starbucks, lat = ~ Latitude, lng = ~ Longitude, popup = starbucks$Name)
## Plot last 6 months of ANTM share price
## Credit: http://www.computerworld.com/article/2893271/business-intelligence/5-data-visualizations-in-5-minutes-each-in-5-lines-or-less-of-r.html
library(checkpoint)
checkpoint("2016-08-22")
library(quantmod)
getSymbols("ANTM", auto.assign=TRUE)
barChart(ANTM, subset = 'last 6 months')
## Plot Atlanta area unemployment
## Credit: http://www.computerworld.com/article/2893271/business-intelligence/5-data-visualizations-in-5-minutes-each-in-5-lines-or-less-of-r.html
library(checkpoint)
checkpoint("2016-08-22")
library(quantmod)
getSymbols("ATLA013URN", src = "FRED")
names(ATLA013URN) = "rate"
library(dygraphs)
dygraph(ATLA013URN, main = "Atlanta area unemployment")
# and for a correlation matrix
mycorr <- cor(na.omit(testdata[3:6]))
library(corrplot)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
corrplot(mycorr, method = "shade", shade.col = NA, tl.col = "black", tl.srt = 45, col = col(200), addCoef.col = "black")
library(checkpoint)
checkpoint("2016-08-22")
file <- "https://opendata.socrata.com/api/views/ddym-zvjk/rows.csv"
starbucks <- read.csv(file)
library(leaflet); library(magrittr)
leaflet() %>%   # this
addTiles() %>% setView(-84.3847, 33.7613, zoom = 16) %>%
addMarkers(data = starbucks, lat = ~ Latitude, lng = ~ Longitude, popup = starbucks$Name)
library(checkpoint)
checkpoint("2016-08-22")
library(quantmod)
getSymbols("ANTM", auto.assign=TRUE)
barChart(ANTM, subset = 'last 6 months')
## Correlation plot
file <- "https://github.com/smach/NICAR15data/raw/master/testscores.csv"
testdata <- read.csv(file, stringsAsFactors = FALSE)
library(ggvis)
ggvis(testdata, ~ pctpoor, ~ score) %>%
layer_points(size := input_slider(10, 310, label = "Point size"), opacity := input_slider(0, 1, label = "Point opacity")) %>%
layer_model_predictions(model = "lm", stroke := "red", fill := "red")
3+3
?read.table
result <- 3+3
result
result <- "MarkKelson"
result
my.data  <- read.csv(file="/Users/Mark/Documents/GitHub/learnR/data/Delegates.csv")
my.data
View(my.data)
View(my.data)
col.names(my.data)
colnames(my.data)
head(my.data)
dim(my.data)
ls()
write.csv(my.data, file="/Users/Mark/Documents/GitHub/learnR/data/Delegates2.csv")
install.packages("foreign")
library(foreign)
search()
?read.spss
my.data$number
mean(my.data$number)
median(my.data$number)
sqrt(var(my.data$number))
?base
wrongway <- cbind(A= c(1,2,3),B=c(4,5,6),C=c(7,8,9))
wrongway
rightway <- t(wrongway)
rightway
mtcars
aggdata <- aggregate(mtcars,
)
aggdata <- aggregate(mtcars,
by = list(cyl, gear),
FUN = mean,
na.rm=TRUE)
aggdata <- aggregate(mtcars,
by = list(mtcars$cyl, mtcars$gear),
FUN = mean,
na.rm=TRUE)
aggdata
aggdata[1,]
aggdata[ ,1:3]
head(aggdata)
head(aggdata)
aggregate(mtcars,
by = list(mtcars$cyl, mtcars$gear),
FUN = sqrt(var()),
na.rm=TRUE)
FUN = var,
aggregate(mtcars,
by = list(mtcars$cyl, mtcars$gear),
FUN = var,
na.rm=TRUE)
View(aggdata)
View(mycorr)
View(aggdata)
dfexample<-data.frame(gender = c("M","M","F","M","F","F","F","M","M","M"),
ht = c(172,186.5,165,180,162.5,179,171,188,175,190),
wt = c(91,99,74,80,75,73,87,90,78,73))
dfexample
dfexample1<-data.frame(dfexample, age = c(25,18,37,23,27,32,30,32,29,19))
dfexample1
head(dfexample1)
head(dfexample1, n=3)
dfexample1[1]
dfexample1["gender"]
dfexample1[c("gender", "age")]
dfexample1[3,]
dfexample1[c(3, 10),]
dfexample1[c(3,10),c("gender","age")]
str(dfexample1)
names(dfexample1)
nrow(dfexample1)
ncol(dfexample1)
summary(dfexample1)
spssexample<-read.spss(file=
"data//Simulated data for CH4 030616.sav",
to.data.frame=TRUE, use.value.labels=TRUE)
spssexample<-read.spss(file=
"/Users/Mark/Documents/GitHub/learnR/data/Simulated data for CH4 030616.sav",
to.data.frame=TRUE, use.value.labels=TRUE)
str(spssexample)
mydata <- data.frame(ID=c(1,1,2,2),Time=c(1,2,1,2),X1=c(5,3,6,2),X2=c(6,5,1,4))
mydata
?require
md <- melt(mydata, id=(c("ID", "Time")))
md <- reshape::melt(mydata, id=(c("ID", "Time")))
?melt
md
cast(md, id~variable,mean)
reshape::cast(md, id~variable,mean)
reshape::cast(md, ID~Variable,mean)
View(md)
reshape::cast(md, ID~variable,mean)
cast(md, ID+Time~variable)
reshape::cast(md, ID+Time~variable)
install.packages("~/Downloads/eefAnalytics_1.0.6.tar.gz", repos = NULL, type = "source")
residuals(exammodelplus)
examdata <- read.csv(file="//Users//Mark//Documents//Cardiff//Teaching//R//learnR//Handbook//Datasets//examdat.csv")
exammodel <- glm(I(testscore>=60)~tuition,data=examdata,family="binomial")
summary(exammodel)
residuals(exammodel)
plot(residuals(exammodel))
plot(residuals(exammodel),fitted(exammodel))
plot(fitted(exammodel),resid(exammodel))
table(fitted(exammodelplus)>.5,examdata$testscore)
exammodelplus <- glm(I(testscore>=60)~tuition + starsign,data=examdata,family="binomial")
summary(exammodelplus)
exp(coef(exammodelplus))
exp(confint(exammodelplus))
table(fitted(exammodelplus)>.5,examdata$testscore)
table(fitted(exammodelplus)>.5,I(examdata$testscore>=60))
?within
library(car)
levenetest(mtcars$mpg,mtcars$am)
leveneTest(mtcars$mpg,mtcars$am)
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
car
library(car)
?leveneTest
p
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
p <- within(p, {
prog <- factor(prog, levels=1:3, labels=c("General", "Academic",
"Vocational"))
id <- factor(id)
})
summary(p)
p <- read.csv("https://stats.idre.ucla.edu/stat/data/poisson_sim.csv")
p <- within(p, {
prog <- factor(prog, levels=1:3, labels=c("General", "Academic",
"Vocational"))
id <- factor(id)
})
summary(p)
write.csv(p,file="/Users/Mark/Documents/GitHub/learnR/poisson.csv")
poissonpath <- "/Users/Mark/Documents/GitHub/learnR/Day 3/poisson.csv"
p <- read.csv(file=poissonpath)
library(ggplot2)
ggplot(p, aes(num_awards, fill = prog)) +
geom_histogram(binwidth=.5, position="dodge")
s <- deltamethod(list(~ exp(x1), ~ exp(x2), ~ exp(x3), ~ exp(x4)),
coef(m1), cov.m1)
## exponentiate old estimates dropping the p values
rexp.est <- exp(r.est[, -3])
## replace SEs with estimates for exponentiated coefficients
rexp.est[, "Robust SE"] <- s
rexp.est
install.packages("msm")
library(msm)
s <- deltamethod(list(~ exp(x1), ~ exp(x2), ~ exp(x3), ~ exp(x4)),
coef(m1), cov.m1)
## exponentiate old estimates dropping the p values
rexp.est <- exp(r.est[, -3])
## replace SEs with estimates for exponentiated coefficients
rexp.est[, "Robust SE"] <- s
rexp.est
m2 <- update(m1, . ~ . - prog)
## test model differences with chi square test
anova(m2, m1, test="Chisq")
install.packages("RCurl")
install.packages("sandwich")
data(tongue)
library(survival)
data(tongue)
m1 <- lm(pH~temp.C, data= abiotic)
summary(m1)
plot(temp.C,pH,data=abiotic)
abline(m1)
abiotic <- data.frame(elevation.m= m, precip.mm=ppt,temp.C = temp, cn = cn, pH= pH)
abiotic
#Input of elevation data in meters
m <- c(1500,2020,2720,3400)
#Input of precip data (mm) at each elevation
ppt <- c(938.3,797.6,593.2,475.6)
#Input of mean temperature data (degrees celsius) at each elevation
temp <- c(17.9,14.9,10.8,7.1)
#Input of soil C:N ratio at each elevation
cn <- c(21.04,21.56,19.33,19.27)
#Input of O-horizon soil pH at each elevation
pH <- c(4.25,4.1,4.2,4.12)
abiotic <- data.frame(elevation.m= m, precip.mm=ppt,temp.C = temp, cn = cn, pH= pH)
#Plot all possible combinations of these variables with blue symbols
plot(abiotic, col= "blue")
m1 <- lm(pH~temp.C, data= abiotic)
summary(m1)
plot(temp.C,pH,data=abiotic)
abline(m1)
